<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:georss='http://www.georss.org/georss' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-7544468520080751654</id><updated>2010-05-02T11:06:24.439+09:00</updated><title type='text'>Emerge Technology</title><subtitle type='html'>生まれ変わった「Days of Liris」。プログラミングのこと、Pythonのこと、気になったソフトウェアのこと、身の回りのこと、いろんなこと。など</subtitle><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://blog.liris.org/feeds/posts/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default'/><link rel='alternate' type='text/html' href='http://blog.liris.org/'/><link rel='hub' href='http://pubsubhubbub.appspot.com/'/><link rel='next' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default?start-index=26&amp;max-results=25'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><openSearch:totalResults>329</openSearch:totalResults><openSearch:startIndex>1</openSearch:startIndex><openSearch:itemsPerPage>25</openSearch:itemsPerPage><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-1908611527200577951</id><published>2010-05-02T11:05:00.000+09:00</published><updated>2010-05-02T11:06:24.580+09:00</updated><title type='text'>鯉のぼり</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://3.bp.blogspot.com/_ssj0PqDmv7c/S9zeIFKYJXI/AAAAAAAABAM/_ZtcYqZF7WM/s1600/%3F%3F-784581.jpg"&gt;&lt;img src="http://3.bp.blogspot.com/_ssj0PqDmv7c/S9zeIFKYJXI/AAAAAAAABAM/_ZtcYqZF7WM/s320/%3F%3F-784581.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5466488278126962034" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-1908611527200577951?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/1908611527200577951/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=1908611527200577951' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1908611527200577951'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1908611527200577951'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/05/blog-post.html' title='鯉のぼり'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://3.bp.blogspot.com/_ssj0PqDmv7c/S9zeIFKYJXI/AAAAAAAABAM/_ZtcYqZF7WM/s72-c/%3F%3F-784581.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-7583252408784309909</id><published>2010-04-30T17:58:00.002+09:00</published><updated>2010-04-30T18:09:58.123+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>lxmlのメモ</title><content type='html'>ちょっと、htmlをパースしたくなりました。パースしたものをxpathで操作してみたくなりました。BeautifulSoupを使おうと思ったのですが、googleさんのお告げによるとlxmlらしいです。lxmlってxmlパーサーだとじっちゃんの代から言われていたので、htmlも食べてくれるとは知りませんでした。パッケージを見ると、lxml.htmlモジュールがいます。いけそうな感じです。どれくらい変なhtmlに対応しているかは分かりませんが、&lt;a href="http://www.arakifamily.net/program/python/17.html"&gt;この記事&lt;/a&gt;によるとBeautifulSoupの13倍速いらしいです。&lt;a href="http://www.ibm.com/developerworks/jp/xml/library/x-hiperfparse/"&gt;IBMの記事&lt;/a&gt;だとlxmlよりcElementTreeの方がさらに高速らしいです。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;さて、lxmlを使ってxpathで要素を抽出してみました。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;pre name="code" class="python"&gt;&lt;br /&gt;import sys&lt;br /&gt;import codecs&lt;br /&gt;from lxml import etree, html&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;filename = sys.argv[1]&lt;br /&gt;encoding = sys.argv[2]&lt;br /&gt;print filename&lt;br /&gt;print encoding&lt;br /&gt;fp = codecs.open(filename, encoding=encoding)&lt;br /&gt;content = fp.read()&lt;br /&gt;fp.close()&lt;br /&gt;&lt;br /&gt;root = html.fromstring(content)&lt;br /&gt;elems = root.xpath('//div[@id="block_story"]')[0]&lt;br /&gt;&lt;br /&gt;fp = open("part.xml", "w")&lt;br /&gt;part = etree.tostring(elems[0], encoding="utf-8")&lt;br /&gt;fp.write(part)&lt;br /&gt;fp.close()&lt;br /&gt;&lt;/pre&gt;ファイルから読み込んで、文字列のhtmlとしてパースして、xpathで要素を取得して、文字列ににしています。何が難しいかというと、XPathを書くのが難しいです。&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-7583252408784309909?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/7583252408784309909/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=7583252408784309909' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7583252408784309909'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7583252408784309909'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/lxml.html' title='lxmlのメモ'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-6657793347850691595</id><published>2010-04-30T12:32:00.001+09:00</published><updated>2010-04-30T14:21:59.154+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='diary'/><title type='text'>なぜこうなった⁈</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://4.bp.blogspot.com/_ssj0PqDmv7c/S9pPQ9tsHdI/AAAAAAAABAE/SDdov2QZ6Qs/s1600/%3F%3F-739008.jpg"&gt;&lt;img src="http://4.bp.blogspot.com/_ssj0PqDmv7c/S9pPQ9tsHdI/AAAAAAAABAE/SDdov2QZ6Qs/s320/%3F%3F-739008.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5465768250630217170" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-6657793347850691595?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/6657793347850691595/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=6657793347850691595' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/6657793347850691595'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/6657793347850691595'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/blog-post_30.html' title='なぜこうなった⁈'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://4.bp.blogspot.com/_ssj0PqDmv7c/S9pPQ9tsHdI/AAAAAAAABAE/SDdov2QZ6Qs/s72-c/%3F%3F-739008.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-3941944304443674318</id><published>2010-04-30T10:28:00.003+09:00</published><updated>2010-04-30T11:17:46.188+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>geventのサンプルを動かしてみたよ</title><content type='html'>geventでごにょごにょ遊ぶ前に、&lt;a href="http://bitbucket.org/denis/gevent/src/tip/examples/concurrent_download.py"&gt;サンプル&lt;/a&gt;を動かしてみました。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;pre name="code" class="python"&gt;&lt;br /&gt;urls = ['http://www.google.com',&lt;br /&gt;     "他いろいろ"]&lt;br /&gt;&lt;br /&gt;import time&lt;br /&gt;import urllib2&lt;br /&gt;&lt;br /&gt;proxy = {'http':'http://192.168.0.230:3128/'}&lt;br /&gt;proxy_handler = urllib2.ProxyHandler(proxy)&lt;br /&gt;opener = urllib2.build_opener(proxy_handler)&lt;br /&gt;urllib2.install_opener(opener)&lt;br /&gt;&lt;br /&gt;def got(url):&lt;br /&gt; print "url" + url&lt;br /&gt; data = opener.open(url).read()&lt;br /&gt; print "url done " + url&lt;br /&gt; return 0&lt;br /&gt;&lt;br /&gt;start = time.time()&lt;br /&gt;jobs = [got(url) for url in urls]&lt;br /&gt;end = time.time()&lt;br /&gt;&lt;br /&gt;print end - start&lt;br /&gt;&lt;/pre&gt; 上のコードが普通のコードです。会社の中でやったので、proxyが通るように書いています。ちゃんと比較するんならスレッドにすべきなのかも知れませんが、手抜きです。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;で、次のコードがgeventを使ったコードです。おサルさんをけしかける(monkey.patch_all())と、ネットワークが非同期で動くようになります。&lt;/div&gt;&lt;div&gt;&lt;pre name="code" class="python"&gt;&lt;br /&gt;urls = ['http://www.google.com',&lt;br /&gt;     "他いろいろ"]&lt;br /&gt;&lt;br /&gt;import gevent&lt;br /&gt;from gevent import monkey&lt;br /&gt;monkey.patch_all()&lt;br /&gt;&lt;br /&gt;import time&lt;br /&gt;import urllib2&lt;br /&gt;&lt;br /&gt;proxy = {'http':'http://192.168.0.230:3128/'}&lt;br /&gt;proxy_handler = urllib2.ProxyHandler(proxy)&lt;br /&gt;opener = urllib2.build_opener(proxy_handler)&lt;br /&gt;urllib2.install_opener(opener)&lt;br /&gt;&lt;br /&gt;def got(url):&lt;br /&gt; print "url" + url&lt;br /&gt; data = opener.open(url).read()&lt;br /&gt; print "url done " + url&lt;br /&gt; return 0&lt;br /&gt;&lt;br /&gt;start = time.time()&lt;br /&gt;jobs = [gevent.spawn(got, url) for url in urls]&lt;br /&gt;gevent.joinall(jobs)&lt;br /&gt;end = time.time()&lt;br /&gt;&lt;br /&gt;print end - start&lt;br /&gt;&lt;/pre&gt;で、geventを使わない方はこんな感じの出力です。&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;div&gt;&lt;div&gt;urlhttp://www.google.com&lt;/div&gt;&lt;div&gt;url done http://www.google.com&lt;/div&gt;&lt;div&gt;urlhttp://xxx1&lt;/div&gt;&lt;div&gt;url done http://xxx1&lt;/div&gt;&lt;div&gt;urlhttp://xxx2&lt;/div&gt;&lt;div&gt;url done http://xxx2&lt;/div&gt;&lt;div&gt;urlhttp://xxx3&lt;/div&gt;&lt;div&gt;url done http://xxx3&lt;/div&gt;&lt;div&gt;1.55014014244&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;順次実行されていきます。次がeventletを使った奴。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;div&gt;&lt;div&gt;urlhttp://www.google.com&lt;/div&gt;&lt;div&gt;urlhttp://xxx1&lt;/div&gt;&lt;div&gt;urlhttp://xxx2&lt;/div&gt;&lt;div&gt;urlhttp://xxx3&lt;/div&gt;&lt;div&gt;url done http://xxx1&lt;/div&gt;&lt;div&gt;url done http://xxx2&lt;/div&gt;&lt;div&gt;url done http://www.google.com&lt;/div&gt;&lt;div&gt;url done http://xxx3&lt;/div&gt;&lt;div&gt;1.30022597313&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;と言うことで、httpへのアクセスがブロックせずに動作していることが分かります。いや、わかりにくいか･･･・。実行時間は、最初のコードがスレッドを使っていないので、公平ではありません。厳密に見ると、メモリ使用量とかCPUの使用率とか、Pythonのスレッドモデルとかいろいろありますが、まあ、今回は感じをつかむと言うことで･･･。eventletを使うとパッケージが違いますがほぼ同じコードです。&lt;/div&gt;&lt;div&gt;これをTwistedのコールバックでも、waitfordeferredでもめんどいし、標準ライブラリをそのまま使うこともできないので、大変です。まあ、eventlet + twistedの組み合わせはなしと言うことで･･･。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;とにかく、コールバックじゃないと、やっぱ楽だな〜。他のライブラリがそのまま使えるのも楽だな〜。&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-3941944304443674318?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/3941944304443674318/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=3941944304443674318' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/3941944304443674318'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/3941944304443674318'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/gevent_30.html' title='geventのサンプルを動かしてみたよ'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-1103109079822314741</id><published>2010-04-23T19:00:00.004+09:00</published><updated>2010-04-23T19:21:42.476+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>[翻訳] geventのeventletとの比較</title><content type='html'>&lt;div&gt;最近、ブログを書いていなかったので「&lt;a href="http://blog.gevent.org/2010/02/27/why-gevent/"&gt;Comparing gevent and eventlet&lt;/a&gt;」を訳してみました。ざっと訳しただけなので、間違っていたらごめんなさい。他のドキュメントは気が向いたら訳すかも知れませんが、多分訳さないでしょう。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;この記事では、&lt;a href="http://www.gevent.org/"&gt;gevent&lt;/a&gt;を始めた理由と&lt;a href="http://www.eventlet.net/"&gt;eventlet&lt;/a&gt;との比較を説明します。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span class="Apple-style-span" style="font-size: large;"&gt;経緯&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Bob Ippolitoは2006年にEventletの&lt;a href="http://svn.red-bean.com/bob/eventlet/trunk/"&gt;最初のバージョン&lt;/a&gt;を書きましたが、割とすぐに開発をやめてしまいました。Donovan Prestonは当時働いていたLinden Labの他の人とメンテナンスを行いました。ステートマシンやコールバックを使うよりも簡単にネットワークソフトウェアを方法を探しており、2008年にEventletに興味を持つようになりました。GreenletをベースとしたEventletは、当時あった他のフレームワーク(PYthonネイティブのジェネレータ、生の&lt;a href="http://codespeak.net/py/0.9.2/greenlet.html"&gt;greenlet&lt;/a&gt;、&lt;a href="https://launchpad.net/corotwine"&gt;Corotwine&lt;/a&gt;)よりも、使いやすさという点で進んだものでした。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;その時関わっていたプロジェクトはTwistedを使っていたので、二つのライブラリを統合することから始めました。作業をしているとEventletの大量のバグを見つけて、ほとんどのコア部分を書き換えました。修正したブランチは取り入れられて、2009年に&lt;a href="https://lists.secondlife.com/pipermail/eventletdev/2009-June/000422.html"&gt;Eventlet 0.8.1&lt;/a&gt;としてリリースされました。その時までにDonovanはLinden Labを去っており、Ryan Williamsが主要なメンテナになっていました。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2009年の夏にネットワークライブラリを主要なコンポーネントにする新しいプロジェクトを始めました。しかし、Eventletは次の二つの要求を満たしませんでした。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;libeventを使っているCで書かれた別のライブラリがあり、それらを統合して一つのプロセスで動作させたいので、libeventのイベントループを使う必要があった。当時のEventletはまともにlibeventをサポートしていなかった。&lt;/li&gt;&lt;li&gt;モンキーパッチでPythonのライブラリを使う予定だったので、socketモジュールが完璧に動作する必要があった。当時のEventletはいくつかのバグがあり、socketの処理が止まってしまった。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://lists.secondlife.com/pipermail/eventletdev/2009-June/000415.html"&gt;pyeventベースのhub&lt;/a&gt;で時間を費やしました。その結果、hub APIをピュアPythonのイベントループに対応させようとして、他のEventletのAPIと互換性がなくなりました。円滑に動作させるためには、他のすべてのhubのインターフェースと実装に大幅な変更が必要でした。socketモジュールのバグはイベントループ固有のもので、pyevent用にバグを修正しても、他のhubにはまだバグが存在していました。Eventletを大幅に書き換えるために、&lt;a href="https://lists.secondlife.com/pipermail/eventletdev/2009-July/000428.html"&gt;後継プロジェクトを開始&lt;/a&gt;しました。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;geventはeventletのバグ修正版として開始して、いくつかの機能をドロップしました。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span class="Apple-style-span" style="font-size: large;"&gt;違い&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;1. geventはlibeventがベース&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="http://www.monkey.org/~provos/libevent/"&gt;libevent&lt;/a&gt;は人気があり、ポータブルなイベントループです。Linuxではepoll、FreeBSDではkqueueのように使用するシステムの最速の仕組みでアプリケーションが動きます。ピュアPythonでのイベントループを持ち、つい最近までepollをサポートできなかったeventletと違って、geventのすべてのイベントループは実世界で、ハイスケーラブルな環境で十分テストされています。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="http://nichol.as/asynchronous-servers-in-python"&gt;優れたパフォーマンス&lt;/a&gt;は、libeventと密接に統合したメリットの一つですが、他にもメリットがあります。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;シグナル操作はイベントループに統合されている&lt;/li&gt;&lt;li&gt;他のlibeventベースのライブラリは、単一のイベントループでアプリケーションに統合できる&lt;/li&gt;&lt;li&gt;DNSへの要求は、ブロッキングコールで使うスレッドプールを介さずに非同期で解決される。&lt;/li&gt;&lt;li&gt;WSGIサーバはlibeventの組み込みHTTPサーバをベースにしていて、&lt;a href="http://nichol.as/benchmark-of-python-web-servers"&gt;超高速&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;2. geventのインターフェースは標準ライブラリのインターフェースにあわせてある&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;たとえば、&lt;a href="http://www.gevent.org/gevent.event.html"&gt;gevent.even.tEvent&lt;/a&gt;は&lt;a href="http://docs.python.org/library/threading.html#event-objects"&gt;threading.Event&lt;/a&gt;と&lt;a href="http://docs.python.org/library/multiprocessing.html#multiprocessing.Event"&gt;multiprocessing.Event&lt;/a&gt;と同じインターフェース、同じセマンティックですが、greenletを通して動作します。eventletは&lt;a href="http://bitbucket.org/which_linden/eventlet/src/815d030a1ef1/eventlet/event.py#cl-12"&gt;Event&lt;/a&gt;クラスもありますが、理由もなく独自の仕様になっています。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;新しいインターフェースに明確な利点がない限り、geventでは標準的なインターフェースを使っています。いくつかのケースでは、クラス全体を歳実装する必要がなかったところでも、メソッドの仕様を標準ライブラリにあわせるように変更しました。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;次のものが、仕様を変更した例です。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;wait()は例外を発生しない&lt;/li&gt;&lt;li&gt;get()は例外を発生させるか、値を返す&lt;/li&gt;&lt;li&gt;join()はwait()のようですが、実行用です。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;一貫したインターフェースはコードを読んだり理解するときのスピードをあげることができます。同様に、APIの学習を容易にします。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;後方互換性を気にしなくても良いので、geventはすべてのAPIのEventletが持っていた癖を修正しました。APIの品質はユーザと&lt;a href="https://lists.secondlife.com/pipermail/eventletdev/2009-October/000555.html"&gt;eventletのメンテナ&lt;/a&gt;が理解しています。geventのlibevent固有ではない部分は、&lt;a href="http://twitter.com/rdw_work/status/9046519339"&gt;eventletに取り入れられています&lt;/a&gt;。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;3. geventはeventletではない&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;geventにはeventletにあるすべての機能はサポートしていません。すでにeventletを使っている場合、次のケースではgeventに乗り換えるべきではありません。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;eventlet.db_poolを使っている場合。geventには対応するモジュールがありません。&lt;/li&gt;&lt;li&gt;eventlet.processesを使っている場合。ライブラリにはサブプロセスのサポートがまだありません。これは、自分でサブプロセスを実装する&lt;a href="http://bitbucket.org/denis/gevent/src/tip/examples/processes.py#cl-1"&gt;例&lt;/a&gt;です。&lt;/li&gt;&lt;li&gt;eventletのthreadpoolを使っている場合。geventは現在は対応するモジュールがあります。&lt;a href="http://groups.google.com/group/gevent/browse_thread/thread/b66f3034f64aa11f"&gt;ユーザがコントリビュート&lt;/a&gt;したものですが、すぐにはライブラリに組み込めないでしょう。&lt;/li&gt;&lt;li&gt;eventletをTwsitedのreactorで実行している場合。&lt;/li&gt;&lt;li&gt;libeventを使えない場合。&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;geventは誰でも使える小さくて安定したコアを目指しています。可能なときはいつでも、ジョブをlibeventにデリゲートします。コルーチンベースのプログラミング用に便利な抽象レイヤーを提供します。eventletにインスパイアされましたが、eventletのフォークではなく新しいAPIが特徴です。実装はもっとシンプルで、もっと安定しています。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;他の人がなぜ&lt;a href="http://groups.google.com/group/gevent/browse_thread/thread/4de9703e5dca8271"&gt;geventを選択&lt;/a&gt;したかや、&lt;a href="http://groups.google.com/group/gevent/browse_thread/thread/7fca7230db0509f6"&gt;eventletからgeventに移行&lt;/a&gt;するときに発生するかも知れないことも読んでみてください。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Thanks to Marcus Cavanaugh, Brad Clements, Nicholas Piël, Andrey Popp and Bob Van Zant for reading drafts of this.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-1103109079822314741?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/1103109079822314741/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=1103109079822314741' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1103109079822314741'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1103109079822314741'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/geventeventlet.html' title='[翻訳] geventのeventletとの比較'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-2188291731907625426</id><published>2010-04-22T18:16:00.005+09:00</published><updated>2010-04-22T19:25:11.511+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>geventをインストール</title><content type='html'>Twisted教は面白いのですが、疲れるのも事実です。そこで、&lt;a href="http://eventlet.net/"&gt;eventlet&lt;/a&gt;に乗り換えようとしたら、jbkingより「ナウでヤングな若者は&lt;a href="http://www.gevent.org/"&gt;gevent&lt;/a&gt;だ(意訳)」と教えてもらって、とりあえず、入門することにしました。&lt;div&gt;&lt;a href="http://blog.gevent.org/2010/02/27/why-gevent/"&gt;eventletとgeventの違い&lt;/a&gt;を読んでいると、源流はeventlet見たいですが、eventletの気にくわないところとバグを直したみたいです。僕はeventletをかなーり前にテスト的なコードしか書いていないので、何が困っているのか分かりませんが、守るものもないので、とりあず、geventでやることにします。&lt;/div&gt;&lt;div&gt;依存しているライブラリはgreenletとlibeventです。greenletはeasy_installでいれときます。ドキュメントをちゃんと読まずにインストールしたので、libeventが入っていませんでした。本当は、入っているつもりだったんです。最新のlibeventをダウンロードしたら、その横にちょっと古いlibeventがあります。展開してビルドした形跡はあるのですが、/usr/libにも/usr/local/libにも~/libにも~/mypy/2.6/libにもいません。どこにインストールしたか不明です。&lt;/div&gt;&lt;div&gt;とりあえず、~/mypy/2.6にlibeventをインストールします。と言ってもlibeventの1系の最新をダウンロード、展開して、&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;div&gt;$ ./configure --prefix=~/mypy/2.6&lt;/div&gt;&lt;div&gt;$ make &amp;amp;&amp;amp; make install&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;するだけです。geventはeasy_installで入れるつもりが、トラブったのでいろいろ見ているせいでtarボールをダウンロードして&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;div&gt;$ python setup.py build -1 -I~/mypy/2.6/include -L~/mypy/2.6/lib&lt;/div&gt;&lt;div&gt;$ python setup.py install&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;でインストールします。終わったらpythonを起動して、import geventでエラーが出ないことを確認。あとは、めくるめくgeventの世界へ･･･&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;※ コマンドの~は適当に展開してね。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;それから、geventをインストールしようとしたらコンパイルエラーが出たとtwitterで日本語でつぶやいたら、Denis Bilenkoと言う人(geventの中の人)が、「@liris do you have libevent and its headers installed?」と英語で返してきました。twitterは不思議です。&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-2188291731907625426?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/2188291731907625426/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=2188291731907625426' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/2188291731907625426'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/2188291731907625426'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/gevent.html' title='geventをインストール'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-2201930066607004151</id><published>2010-04-03T12:59:00.001+09:00</published><updated>2010-04-03T12:59:12.330+09:00</updated><title type='text'>満開だな</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://4.bp.blogspot.com/_ssj0PqDmv7c/S7a9EPiXx2I/AAAAAAAAA_w/sbBaj9IgINI/s1600/%3F%3F-752331.jpg"&gt;&lt;img src="http://4.bp.blogspot.com/_ssj0PqDmv7c/S7a9EPiXx2I/AAAAAAAAA_w/sbBaj9IgINI/s320/%3F%3F-752331.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5455755879193757538" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-2201930066607004151?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/2201930066607004151/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=2201930066607004151' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/2201930066607004151'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/2201930066607004151'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/blog-post_03.html' title='満開だな'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://4.bp.blogspot.com/_ssj0PqDmv7c/S7a9EPiXx2I/AAAAAAAAA_w/sbBaj9IgINI/s72-c/%3F%3F-752331.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-4404061672276313724</id><published>2010-04-03T12:52:00.001+09:00</published><updated>2010-04-03T12:52:09.782+09:00</updated><title type='text'>さくら</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://2.bp.blogspot.com/_ssj0PqDmv7c/S7a7aSlEKWI/AAAAAAAAA_o/4wiq_38twkI/s1600/%3F%3F-729782.jpg"&gt;&lt;img src="http://2.bp.blogspot.com/_ssj0PqDmv7c/S7a7aSlEKWI/AAAAAAAAA_o/4wiq_38twkI/s320/%3F%3F-729782.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5455754058944227682" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-4404061672276313724?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/4404061672276313724/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=4404061672276313724' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/4404061672276313724'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/4404061672276313724'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/04/blog-post.html' title='さくら'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://2.bp.blogspot.com/_ssj0PqDmv7c/S7a7aSlEKWI/AAAAAAAAA_o/4wiq_38twkI/s72-c/%3F%3F-729782.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-1047942817615870293</id><published>2010-03-23T18:12:00.002+09:00</published><updated>2010-03-23T18:27:14.852+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='diary'/><title type='text'>NHKスペシャル「マスメディア崩壊」を見ました</title><content type='html'>NHKスペシャル「マスメディア崩壊」を見ました。とても面白かったです。まじめな議論を期待している人は見る価値はなかったと思います。ちゃんと論理的にお話をしているのが佐々木俊尚さんだけでした。テレビの代表と新聞の代表がネットを使ったことがなさそうなおじいちゃんという凄いキャスティングはなかなかのものです。さらに、おじいちゃん達の言っていること、わけわかんないし。日本は外国とは違うから大丈夫とか、ネットと融合すればいいんでしょ?みたいな感じかな。&lt;br /&gt;&lt;br /&gt;朝生と違うのは、おじいちゃん達がいたらから白熱(?)できなかったからでしょうか?日経のネットへの進出をテレビの人が褒めると、佐々木さんが「料金体系がそもそも間違っているでしょ」で議論が終わっちゃうのは、テレビの人がおじいちゃんだからでしょうか?&lt;br /&gt;&lt;br /&gt;これをみて、やっぱり朝生の方が、面白いな〜。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-1047942817615870293?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/1047942817615870293/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=1047942817615870293' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1047942817615870293'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1047942817615870293'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/03/nhk.html' title='NHKスペシャル「マスメディア崩壊」を見ました'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-5664872801298879467</id><published>2010-03-23T17:30:00.001+09:00</published><updated>2010-03-23T17:35:21.720+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>pythonでCGIを書いた</title><content type='html'>生まれて初めてpythonでCGIを書きました。本当の素のCGIです。書いたのは数週間前ですが･･･。ちなみに、perlではCGIを書いたことがあります。&lt;br /&gt;&lt;br /&gt;面白いことは何もありません。環境変数から値をとるだけです。printで出力するだけです。cgiモジュールのFieldStorageでPOSTのパラメータを取得できます。wsgiとかはとある事情で使っていません。&lt;br /&gt;&lt;br /&gt;2000年のころにタイムスリップした感じがします。やっぱり面白いことはありません。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-5664872801298879467?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/5664872801298879467/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=5664872801298879467' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/5664872801298879467'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/5664872801298879467'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/03/pythoncgi.html' title='pythonでCGIを書いた'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-1498003422448065559</id><published>2010-03-20T15:29:00.001+09:00</published><updated>2010-03-20T15:29:09.040+09:00</updated><title type='text'>カリフォルニアバーガー</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://2.bp.blogspot.com/_ssj0PqDmv7c/S6RrNdzKF7I/AAAAAAAAA_g/DPog5xJxVGg/s1600-h/%3F%3F-749041.jpg"&gt;&lt;img src="http://2.bp.blogspot.com/_ssj0PqDmv7c/S6RrNdzKF7I/AAAAAAAAA_g/DPog5xJxVGg/s320/%3F%3F-749041.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5450599328106813362" /&gt;&lt;/a&gt;&lt;/p&gt;まずかった。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-1498003422448065559?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/1498003422448065559/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=1498003422448065559' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1498003422448065559'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1498003422448065559'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/03/blog-post_20.html' title='カリフォルニアバーガー'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://2.bp.blogspot.com/_ssj0PqDmv7c/S6RrNdzKF7I/AAAAAAAAA_g/DPog5xJxVGg/s72-c/%3F%3F-749041.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-7435259537563359747</id><published>2010-03-19T18:07:00.002+09:00</published><updated>2010-03-19T18:19:54.639+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>ちょっとだけctypes</title><content type='html'>最近、あんまりブログ書いていないので、とりあえず書きます。最近、というかちょっと前にお仕事でやったことのまとめです。&lt;br /&gt;&lt;br /&gt;まず、僕はctypesが嫌いです。嫌いというよりは怖いです。Cと同じように簡単にいろんなものが破壊できます。でも、Cのライブラリを呼び出すのがとても楽チンで便利です。&lt;br /&gt;&lt;br /&gt;まずは、僕が書いたコードです。&lt;br /&gt;&lt;br /&gt;&lt;pre name="code" class="python"&gt;&lt;br /&gt;import ctypes&lt;br /&gt;mylib = ctypes.cdll.LoadLibrary("libmylibrary.so")&lt;br /&gt;result = mylib.my_function("arg1", 1)&lt;br /&gt;  :&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;うーん、説明するまでもないですね。LoadLibraryでライブラリをロードしています。これは、もう少しいろんな書き方ができますが、やっていることは本質的に同じです。&lt;br /&gt;で、あとは、ロードしたライブラリの関数がそのまま、コールできます。引数は文字列や数字であれば大体自動で変換してくれるので、あまり気にする必要はありません。戻り値も数字であれば気にする必要がありません。数字以外の戻り値は、関数におまじないをすれば大丈夫です。&lt;br /&gt;&lt;br /&gt;とっても楽です。でも怖いです。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-7435259537563359747?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/7435259537563359747/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=7435259537563359747' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7435259537563359747'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7435259537563359747'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/03/ctypes.html' title='ちょっとだけctypes'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-6383718447748216388</id><published>2010-03-09T19:59:00.001+09:00</published><updated>2010-03-19T18:36:38.440+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='おやつ'/><title type='text'>ニクキュウグミだじょ〜♪</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://1.bp.blogspot.com/_ssj0PqDmv7c/S5YqHb1H6tI/AAAAAAAAA_Y/8YaqW_fIYMY/s1600-h/%3F%3F-781794.jpg"&gt;&lt;img src="http://1.bp.blogspot.com/_ssj0PqDmv7c/S5YqHb1H6tI/AAAAAAAAA_Y/8YaqW_fIYMY/s320/%3F%3F-781794.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5446587106569218770" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-6383718447748216388?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/6383718447748216388/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=6383718447748216388' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/6383718447748216388'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/6383718447748216388'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/03/blog-post.html' title='ニクキュウグミだじょ〜♪'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://1.bp.blogspot.com/_ssj0PqDmv7c/S5YqHb1H6tI/AAAAAAAAA_Y/8YaqW_fIYMY/s72-c/%3F%3F-781794.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-1811175408176893125</id><published>2010-02-27T10:55:00.000+09:00</published><updated>2010-03-08T10:44:19.964+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ランチ'/><title type='text'>木曜のランチ</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://2.bp.blogspot.com/_ssj0PqDmv7c/S4h7aHtjVSI/AAAAAAAAA_Q/sFnMbI-8_yA/s1600-h/%3F%3F-788020.jpg"&gt;&lt;img src="http://2.bp.blogspot.com/_ssj0PqDmv7c/S4h7aHtjVSI/AAAAAAAAA_Q/sFnMbI-8_yA/s320/%3F%3F-788020.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5442735838354167074" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-1811175408176893125?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/1811175408176893125/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=1811175408176893125' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1811175408176893125'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/1811175408176893125'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/02/blog-post_27.html' title='木曜のランチ'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://2.bp.blogspot.com/_ssj0PqDmv7c/S4h7aHtjVSI/AAAAAAAAA_Q/sFnMbI-8_yA/s72-c/%3F%3F-788020.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-4751630389005396379</id><published>2010-02-26T14:02:00.000+09:00</published><updated>2010-03-08T10:44:19.965+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ランチ'/><title type='text'>ハワイアンバーガー</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://1.bp.blogspot.com/_ssj0PqDmv7c/S4dVsruJWTI/AAAAAAAAA_I/nNuLpDAhnjk/s1600-h/%3F%3F-798213.jpg"&gt;&lt;img src="http://1.bp.blogspot.com/_ssj0PqDmv7c/S4dVsruJWTI/AAAAAAAAA_I/nNuLpDAhnjk/s320/%3F%3F-798213.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5442412900839414066" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-4751630389005396379?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/4751630389005396379/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=4751630389005396379' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/4751630389005396379'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/4751630389005396379'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/02/blog-post_26.html' title='ハワイアンバーガー'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://1.bp.blogspot.com/_ssj0PqDmv7c/S4dVsruJWTI/AAAAAAAAA_I/nNuLpDAhnjk/s72-c/%3F%3F-798213.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-7531124673441036544</id><published>2010-02-12T18:27:00.000+09:00</published><updated>2010-02-12T18:27:42.638+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='diary'/><title type='text'>チョコ</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://2.bp.blogspot.com/_ssj0PqDmv7c/S3Ue4O3OIeI/AAAAAAAAA-8/ziC9AjaYot4/s1600-h/%3F%3F-716167.jpg"&gt;&lt;img src="http://2.bp.blogspot.com/_ssj0PqDmv7c/S3Ue4O3OIeI/AAAAAAAAA-8/ziC9AjaYot4/s320/%3F%3F-716167.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5437286076530958818" /&gt;&lt;/a&gt;&lt;/p&gt;会社の女の子たちにチョコもらった。写真の絵は手書きです。&lt;p&gt;ありがとうございます。多分、子供が食べます。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-7531124673441036544?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/7531124673441036544/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=7531124673441036544' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7531124673441036544'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7531124673441036544'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/02/blog-post_12.html' title='チョコ'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://2.bp.blogspot.com/_ssj0PqDmv7c/S3Ue4O3OIeI/AAAAAAAAA-8/ziC9AjaYot4/s72-c/%3F%3F-716167.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-890087840729758346</id><published>2010-02-09T18:54:00.002+09:00</published><updated>2010-02-09T19:05:04.595+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='dev'/><title type='text'>会社のPCをWindows 7にした</title><content type='html'>会社のPCをVistaからWindows 7にアップグレードしました。6時間の苦行でした。僕のMacBookのSnow Leopardへのアップグレードは1時間ほどだったので、実に6倍の時間です。素敵なものは簡単に手に入らないという教訓です。&lt;br /&gt;&lt;br /&gt;さて、一番困ったのは、Ctrlキーの位置が左下になってしまったことです。Ctrlキーの位置はAの左と相場が決まっています。いろいろ試行錯誤したのですが、結局&lt;a href="http://technet.microsoft.com/en-us/sysinternals/bb897578.aspx"&gt;Ctrl2Cap v2.0&lt;/a&gt;というソフトでないとCtrlキーとCapsがスワップしてくれませんでした。これを展開して、管理者権限でターミナルを開いてctrl2cap.exe /installを実行して再起動、と言う手順になります。&lt;br /&gt;&lt;br /&gt;次にcygtermを起動すると変な(本当は変じゃないんですが･･･)ウィンドウが二つあらわれます。teraterm proをアップデートしても変わらず。で、cygwinをふるーいものから1.7.1にアップデートすると、変なウィンドウも現れずに、ちゃんと動きます。Windows7でCreateProcessの振る舞いが少し変わったらしいです。&lt;br /&gt;&lt;br /&gt;あとは、多分、そこそこ動いていると思います。僕はFirefoxとIEとThunderbirdとHidemaruとCygterm(cygwinのため。TeraTerm本体は使わない)とSafariとChromeとEclipseぐらいしか、会社では使わないのでそれいじょうはよくわかりません。EmacsとかはWindowsではつかいません。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-890087840729758346?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/890087840729758346/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=890087840729758346' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/890087840729758346'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/890087840729758346'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/02/pcwindows-7.html' title='会社のPCをWindows 7にした'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-8079219744776584795</id><published>2010-02-03T15:53:00.003+09:00</published><updated>2010-02-03T16:02:51.618+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='diary'/><title type='text'>高速道路無料化って･･･</title><content type='html'>本当に高速道路の一部無料化するんだ。無料化になるところに、西湘バイパスとかあって、月に2回ぐらい使っています。でも、そこそこ、混むんだよなー。特に、横浜方面の出口は2車線が1車線になるので、休日はかなり渋滞します。もっと混むんだろうか?いやだなー。新湘南バイパスはよくわかりません。車が一杯走っているのをみたことがありません。&lt;br /&gt;&lt;br /&gt;さて、西湘バイパスって、ETCで200円ぐらいだったと思うんですが、月に数回乗るだけであれば200円が無料になったってあんまりうれしくはありません。伊豆に行く途中で2､3キロでお金を取られるところがありますが、それは高いと思いますが･･･。&lt;br /&gt;&lt;br /&gt;東名が無料になればうれしいですが、それはないでしょう。お金をとってもいいので、さっさと第2東名を作って、できれば制限時速を160km/hぐらいにしてくれればいいのに･･･。160はさすがに無理か。140でお願いします。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-8079219744776584795?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/8079219744776584795/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=8079219744776584795' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/8079219744776584795'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/8079219744776584795'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/02/blog-post.html' title='高速道路無料化って･･･'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-7087942924693588153</id><published>2010-02-02T16:42:00.003+09:00</published><updated>2010-02-02T16:57:36.669+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='dev'/><title type='text'>websocketsのpipeline</title><content type='html'>websocketsでpipelineの記事を読んでいて、とってもおもしろいです。と言うか、やっとちゃんと読み始めました。なにやらすごそうらしいと聞いていましたが、何なのかさっぱり分かっていませんでした。と言うか調べようとしてませんでした。&lt;br /&gt;基本はwebsocketsでだらだらとデータを送信して、ぽこぽこと受信したデータを処理して表示すると言うものらしいです。まあ、データの受信を待たずに非同期で送信する感じ。さて、&lt;a href="http://blog.livedoor.jp/kotesaki/archives/1385591.html"&gt;この記事&lt;/a&gt;を読むとwebが速くなるらしいです。自分で計測していないし、コードもちゃんと眺めてはいないのですが、ざっと見た感じは正しそうに見えます。&lt;br /&gt;&lt;br /&gt;websocketsについて初めて聞いたとき、「それってHTML5じゃなくてHTTPの拡張じゃない?」と思った後に、「なぜHTTPにこだわる必要があるんだろう?」と。で、先ほどの記事をよんで、やっぱり「HTTPである必要性って何?」と。既存のインフラがそのまま使えるとか、そういうことは分かるんですが･･･。HTTP over WebSockets見たいな感じかな？P2Pの頃に、物理ネットワーク上に仮想ネットワークが形成されているという話がありました。結局、そのころのそうした仮想ネットワークのデジャブーを感じてしまったりします。で、websocketsはとってもおもしろいなー。ブラウザとライブラリ(クライアントの方ね)の対応がもっと進んで、互換レイヤーみたいなのを介してシームレスにwebsockets(みたいなもの)が扱えればいいな。まあ、HTML5のwebsocketsを直接処理してもいいんですが･･･。&lt;br /&gt;&lt;br /&gt;何の結論もない単なる感想でした。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-7087942924693588153?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/7087942924693588153/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=7087942924693588153' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7087942924693588153'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7087942924693588153'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/02/websocketspipeline.html' title='websocketsのpipeline'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-5815807133505194829</id><published>2010-01-27T19:59:00.002+09:00</published><updated>2010-01-27T20:11:00.797+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><title type='text'>Google Chrome for Mac(dev版)を入れた</title><content type='html'>このままではChromeはwebsocketsのテスト以外で使わなくなるので、&lt;a href="http://dev.chromium.org/getting-involved/dev-channel"&gt;Mac用のGoogle Chromeのdev版&lt;/a&gt;をインストールしました。かなりの機能が使えるようになっていたので、WindowsのChromeのExtensionをうらやむこともなくなりました。一説にはChroniumを使えと言うお話もちらほら聞きますが、それは許してください。&lt;br /&gt;インストールしたんですが、やっぱり、websocketsとかのテスト以外していません。&lt;br /&gt;&lt;br /&gt;ちょっと使っただけですが、そこそこ安定しているように見えます。でも、まだ、常用する気にはなれません。多分困らないとは思うんだけど･･･&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-5815807133505194829?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/5815807133505194829/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=5815807133505194829' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/5815807133505194829'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/5815807133505194829'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/01/google-chrome-for-macdev.html' title='Google Chrome for Mac(dev版)を入れた'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-2163418679144393481</id><published>2010-01-26T15:43:00.002+09:00</published><updated>2010-01-26T15:49:51.782+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='mac'/><title type='text'>Macでファンクションキーが効かなくなることが･･･</title><content type='html'>いつの頃からか、Macでファンクションキーが効かなくなることが頻発するようになりました。去年はそのような症状はなかったと思うので、そろそろMacを買い換えた方がいいのかと思い始めていましたが、&lt;a href="http://blog.creamu.com/mt/2010/01/snow_leopard_2.html"&gt;ここ&lt;/a&gt;を読むとSnow Leopardでそこそこおこるらしい。ググっても沢山出ています。対処方法は、コンソールから「killall Dock」。大胆。これで解消しました。&lt;br /&gt;&lt;br /&gt;実際はログになにかエラーメッセージが出ているらしいので、がんばりたい人はログを監視してもいいのかもしれません。僕はSpotlight以外はあまりファンクションキーを使わないし、使えなくなるなるのは、F8-12なので実はそんなに困っていませんが･･･。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-2163418679144393481?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/2163418679144393481/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=2163418679144393481' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/2163418679144393481'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/2163418679144393481'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/01/mac.html' title='Macでファンクションキーが効かなくなることが･･･'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-4163968208387275476</id><published>2010-01-22T13:27:00.001+09:00</published><updated>2010-01-26T15:50:39.156+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='ランチ'/><title type='text'>テキサスバーガー</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://3.bp.blogspot.com/_ssj0PqDmv7c/S1kpNRlq_nI/AAAAAAAAA-0/7UEIt96TXyQ/s1600-h/%3F%3F-753478.jpg"&gt;&lt;img src="http://3.bp.blogspot.com/_ssj0PqDmv7c/S1kpNRlq_nI/AAAAAAAAA-0/7UEIt96TXyQ/s320/%3F%3F-753478.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5429416133808291442" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-4163968208387275476?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/4163968208387275476/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=4163968208387275476' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/4163968208387275476'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/4163968208387275476'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/01/blog-post_22.html' title='テキサスバーガー'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://3.bp.blogspot.com/_ssj0PqDmv7c/S1kpNRlq_nI/AAAAAAAAA-0/7UEIt96TXyQ/s72-c/%3F%3F-753478.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-7342633342857272556</id><published>2010-01-20T17:03:00.001+09:00</published><updated>2010-01-26T15:50:49.894+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='おやつ'/><title type='text'>チョコレートスパークリング</title><content type='html'>&lt;p class="mobile-photo"&gt;&lt;a href="http://3.bp.blogspot.com/_ssj0PqDmv7c/S1a4xY1tCxI/AAAAAAAAA-s/Kl15q2uXPGI/s1600-h/%3F%3F-796816.jpg"&gt;&lt;img src="http://3.bp.blogspot.com/_ssj0PqDmv7c/S1a4xY1tCxI/AAAAAAAAA-s/Kl15q2uXPGI/s320/%3F%3F-796816.jpg"  border="0" alt="" id="BLOGGER_PHOTO_ID_5428729559462513426" /&gt;&lt;/a&gt;&lt;/p&gt;悪くない。でも、たくさんはいらない。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-7342633342857272556?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/7342633342857272556/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=7342633342857272556' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7342633342857272556'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7342633342857272556'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/01/blog-post_20.html' title='チョコレートスパークリング'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><media:thumbnail xmlns:media='http://search.yahoo.com/mrss/' url='http://3.bp.blogspot.com/_ssj0PqDmv7c/S1a4xY1tCxI/AAAAAAAAA-s/Kl15q2uXPGI/s72-c/%3F%3F-796816.jpg' height='72' width='72'/><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-613902095991543528</id><published>2010-01-13T15:11:00.003+09:00</published><updated>2010-01-13T15:32:00.696+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='dev'/><title type='text'>pywebsocketをちょっとだけ見てみた</title><content type='html'>pywebsocketというPython製のwebsocketを利用するためのApacheモジュールがあるらしいので、ちょっとだけ見てみました。ちなみにこのエントリはPythonとはあまり関係がありません。興味を持ったきっかけは、現状のApacheでC10Kをどうやって解決してwebsocketを実装したのだろうということです。結論は残念ながら単にApacheでwebsocketを利用するためだけのものでした。ただ、現状のインフラでちょっとだけ実用的にwebsocketを遊べるのはそれはそれですばらしいことです。僕がgolangで書いたサンプル、もしくはgolangはまだ実環境で使える代物ではないし。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Apacheはスレッドモデルで動きます。一つのリクエストが一つのスレッドを占有します。WebSocket自体は、AJAXによる定期的なポーリングやcometによるロングポーリングよりはオーバーヘッドは遙かに小さくメリットがあります。ただ、AJAXによる定期的なポーリングはサーバーサイドでは一瞬ですがWebSocketのようにコネクションが張りっぱなしの時は、1リクエスト1スレッドだと問題が発生します。たとえば、スレッド一つにつき、大体メモリ1Mを消費します。1000個のリクエストだとスレッドの維持だけで1Gのメモリを消費します。chatのサンプルは、一つのクライアントに対して二つのスレッドを使っていたので、単純に考えて2Gのメモリが必要です。さらにchatの場合、ほとんど何もしない状態なのに、スレッドのコンテキストの切り替えが発生し無駄に時間がかかります。それでも1000個ぐらいであれば多分問題ないですが、クライアントが増えると馬鹿になりません。まあ、メモリの方がネックになると思っていますが。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;pywebsocketもmod_python経由でスレッドモデルなので、結局上のような限界が発生します。mod_pythonでクライアント-サーバみたいに動かすことで回避できるか期待しましたが、結局同じです。なので、スケールを考えてwebsocketを使うのにはAapacheの次のバージョンが必要かもしれません。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;でも、待ちきれないという、そんなあなたにjettyで、jythonです。&lt;/div&gt;&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-613902095991543528?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/613902095991543528/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=613902095991543528' title='0 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/613902095991543528'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/613902095991543528'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/01/pywebsocket.html' title='pywebsocketをちょっとだけ見てみた'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-7544468520080751654.post-7002522555274587051</id><published>2010-01-06T16:19:00.004+09:00</published><updated>2010-01-14T16:16:47.829+09:00</updated><category scheme='http://www.blogger.com/atom/ns#' term='python'/><title type='text'>Pythonでtailもどき</title><content type='html'>WebSockets関連の&lt;a href="http://blog.livedoor.jp/kotesaki/archives/1355651.html"&gt;ブログ&lt;/a&gt;を読んでいたらファイルの末尾の変更を見るために豪快なことをやっていたので、tail -fみたいなことをするサンプル。&lt;br /&gt;&lt;br /&gt;&lt;pre  name="code" class="python"&gt;#!/usr/bin/python&lt;br /&gt;&lt;br /&gt;import os&lt;br /&gt;import time&lt;br /&gt;&lt;br /&gt;MAX_INTERVAL = 1.0&lt;br /&gt;&lt;br /&gt;def readLines(path):&lt;br /&gt;   fp = open(path, "r")&lt;br /&gt;   stat = os.stat(path)&lt;br /&gt;   fp.seek(stat[6])&lt;br /&gt;&lt;br /&gt;   try:&lt;br /&gt;       while True:&lt;br /&gt;           where = fp.tell()&lt;br /&gt;           line = fp.readline()&lt;br /&gt;           if not line:&lt;br /&gt;               time.sleep(MAX_INTERVAL)&lt;br /&gt;               fp.seek(where)&lt;br /&gt;           else:&lt;br /&gt;               yield line&lt;br /&gt;   except:&lt;br /&gt;       pass&lt;br /&gt;   finally:&lt;br /&gt;       fp.close()&lt;br /&gt;&lt;br /&gt;if __name__ == "__main__":&lt;br /&gt;   import sys&lt;br /&gt;   for line in readLines(sys.argv[1]):&lt;br /&gt;       print line,&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;ファイルを開き直すでもいいんだけど、前回の読み込んだ位置を覚えておいてseekすれば、もう少しわかりやすいかな?まあ、本質的なことじゃないんだけど、コードが理解できなかったので・・・。&lt;div class="blogger-post-footer"&gt;&lt;img width='1' height='1' src='https://blogger.googleusercontent.com/tracker/7544468520080751654-7002522555274587051?l=blog.liris.org' alt='' /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://blog.liris.org/feeds/7002522555274587051/comments/default' title='コメントの投稿'/><link rel='replies' type='text/html' href='https://www.blogger.com/comment.g?blogID=7544468520080751654&amp;postID=7002522555274587051' title='3 件のコメント'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7002522555274587051'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/7544468520080751654/posts/default/7002522555274587051'/><link rel='alternate' type='text/html' href='http://blog.liris.org/2010/01/pythontail.html' title='Pythonでtailもどき'/><author><name>liris</name><uri>http://www.blogger.com/profile/00184397831320540675</uri><email>noreply@blogger.com</email><gd:extendedProperty xmlns:gd='http://schemas.google.com/g/2005' name='OpenSocialUserId' value='02529664780039361864'/></author><thr:total>3</thr:total></entry></feed>